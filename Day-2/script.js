// 1. Write a function that returns the sum of two numbers.
// 2. write a function that returns the sum of all numbers regardless of # of params

/* 
Example:
for param1= 1 and param2 = 2, the outputs should be add (param1, param2)=3.

Input/Output: [time limit] 400ms (js)
[input] integer param1

Hints: 
=> arithmetic operations 
=> rest operations
=> forEach()
*/


function sum(param1, param2) {
        return param1 + param2
}
console.log(sum(1, 2)) / 3


function totalSum(...param1) {
        let total = 0;
        param1.forEach(perElem => {
               total+= perElem
        })
        return total
}
console.log(totalSum(1, 2, 3, 87)); // 93







/*

## ЁЯУЦ **ржЧрж▓рзНржк: тАЬржжрзБржЗ ржнрж╛ржЗ ржЖрж░ рждрж╛ржжрзЗрж░ ржмржирзНржзрзБржжрзЗрж░ ржЯрж╛ржХрж╛ ржпрзЛржЧтАЭ**

### ЁЯОТ Part 1: ржжрзБржЗ ржнрж╛ржЗрзЯрзЗрж░ ржЯрж╛ржХрж╛рж░ рж╣рж┐рж╕рж╛ржм

ржжрзБржЗ ржнрж╛ржЗ тАФ **рж░рж╛рж╣рж╛ржд** ржЖрж░ **рждрж╛рж╣рж╛ржд**
рждрж╛ржжрзЗрж░ ржХрж╛ржЫрзЗ ржЯрж╛ржХрж╛ ржЖржЫрзЗ:

* рж░рж╛рж╣рж╛ржд = 1 ржЯрж╛ржХрж╛
* рждрж╛рж╣рж╛ржд = 2 ржЯрж╛ржХрж╛

рждрж╛рж░рж╛ ржЪрж╛рзЯ, "**ржорзЛржЯ ржХржд ржЯрж╛ржХрж╛ ржЖржЫрзЗ ржЖржорж╛ржжрзЗрж░?**"

рждрзБржорж┐ рждржЦржи ржПржХржЯрж╛ ржЫрзЛржЯрзНржЯ ржлрж╛ржВрж╢ржи ржмрж╛ржирж╛рж▓рзЗ:

```js
function sum(param1, param2) {
    return param1 + param2;
}
console.log(sum(1, 2)); // 3
```

ржПржЗ ржлрж╛ржВрж╢ржиржЯрж╛ рж╢рзБржзрзБржорж╛рждрзНрж░ **ржжрзБржЗ ржЬржирзЗрж░ ржпрзЛржЧржлрж▓** ржЬрж╛ржирж╛рждрзЗ ржкрж╛рж░рзЗред

---

### ЁЯСм ржХрж┐ржирзНрждрзБ ржПржЦржи?

рж░рж╛рж╣рж╛ржд-рждрж╛рж╣рж╛ржд ржПрж░ рж╕рж╛ржерзЗ ржЖрж░ржУ ржмржирзНржзрзБрж░рж╛ ржЖрж╕рж▓рзЛ:

* ЁЯСж рж░рж╛рж╣рж╛ржд: 1
* ЁЯСж рждрж╛рж╣рж╛ржд: 2
* ЁЯСз рж▓рж┐ржЬрж╛: 3
* ЁЯСи рж░рж╛рж╣рж┐ржо: 87

рждрж╛рж░рж╛ рж╕ржмрж╛ржЗ ржмрж▓рж▓рзЛ, "**рждрзЛржорж╛рж░ ржлрж╛ржВрж╢ржи ржХрж┐ ржЖржорж╛ржжрзЗрж░ рж╕ржмрж╛рж░ ржЯрж╛ржХрж╛ ржпрзЛржЧ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗ?**"

---

### ЁЯУж рждржЦржи рждрзБржорж┐ ржмрж▓рж▓рзЗ:

тАЬрж╣рзНржпрж╛ржБ! ржЖржорж┐ ржПржХржЯрж╛ ржЬрж╛ржжрзБрж░ ржмрзНржпрж╛ржЧ ржмрж╛ржирж╛ржмрзЛ, ржпрзЗржЦрж╛ржирзЗ ржпржд ржЦрзБрж╢рж┐ рж╕ржВржЦрзНржпрж╛ ржврзЛржХрж╛ржУ тАФ рж╕ржм ржпрзЛржЧ рж╣рзЯрзЗ ржпрж╛ржмрзЗ!тАЭ
ржПржЗ ржЬрж╛ржжрзБрж░ ржмрзНржпрж╛ржЧ ржорж╛ржирзЗ ЁЯСЙ **rest parameter** (`...param1`)

---

### ЁЯкД рждржЦржи рждрзБржорж┐ ржлрж╛ржВрж╢ржиржЯрж╛ ржПржоржи ржмрж╛ржирж╛рж▓рзЗ:

```js
function totalSum(...param1) {
    let total = 0;
    param1.forEach(perElem => {
        total += perElem;
    });
    return total;
}
console.log(totalSum(1, 2, 3, 87)); // 93
```

---

### тЪЩя╕П ржХрж┐ржнрж╛ржмрзЗ ржХрж╛ржЬ ржХрж░рзЗ?

* `...param1` тЮд рж╕ржм рж╕ржВржЦрзНржпрж╛ржЧрзБрж▓рзЛржХрзЗ ржПржХрж╕рж╛ржерзЗ ржПржХржЯрж╛ ржмрзНржпрж╛ржЧрзЗ ржирж┐рзЯрзЗ ржирзЗрзЯ (array)
* `forEach()` тЮд ржкрзНрж░рждрж┐ржЯрж╛ рж╕ржВржЦрзНржпрж╛рж░ ржУржкрж░ ржШрзБрж░рзЗ, `total` ржПрж░ рж╕рж╛ржерзЗ ржпрзЛржЧ ржХрж░рзЗ

---

### ЁЯза ржоржирзЗ рж░рж╛ржЦрж╛рж░ ржЧрж▓рзНржкрж╕ржВржХрзНрж╖рзЗржк:

> ржкрзНрж░ржержо ржлрж╛ржВрж╢ржи рж╢рзБржзрзБ **ржжрзБржЗ ржнрж╛ржЗрзЯрзЗрж░ ржпрзЛржЧржлрж▓** ржжрж┐рждрзЗ ржкрж╛рж░рзЗред
> ржжрзНржмрж┐рждрзАрзЯ ржлрж╛ржВрж╢ржи рж╣рж▓рзЛ **ржмржирзНржзрзБржжрзЗрж░ ржирж┐рзЯрзЗ ржмрж╛ржирж╛ржирзЛ ржмрж┐рж╢рж╛рж▓ ржЬрж╛ржжрзБрж░ ржмрзНржпрж╛ржЧ**, ржпрзЗржЦрж╛ржирзЗ ржпржд ржЦрзБрж╢рж┐ рж╕ржВржЦрзНржпрж╛ржЗ ржврзЛржХрж╛ржУ тАФ рж╕ржм ржпрзЛржЧ ржХрж░рзЗ ржжрж┐ржмрзЗ!


*/